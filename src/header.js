import PropTypes from 'prop-types';
import React from 'react';
import { connect } from 'react-redux';
import * as storesMap from './components/store/storesMap';

const Header = ({ originalData, setStoresMap }) => {
  const wordEats = 'M0.2578120.491821H16.3378V4.42625H4'
  + '.60141V10.0131H16.0112V13.8138H4.60141V19.4951H16'
  + '.3378V23.4295H0.257812V0.491821ZM60.7457 23.8426C65.6755 '
  + '23.8426 68.4532 21.482 68.4532 18.24C68.4532 15.9305 '
  + '66.8086 14.2072 63.366 13.4597L59.7267 12.7161C57.6139 '
  + '12.3226 56.949 11.9292 56.949 11.1423C56.949 10.1233 '
  + '57.968 9.49772 59.8447 9.49772C61.8788 9.49772 63.3857 '
  + '10.0446 63.7791 11.9253H68.044C67.8119 8.38428 65.2663 '
  + '6.04723 60.1044 6.04723C55.6427 6.04723 52.5109 7.88854 '
  + '52.5109 11.4571C52.5109 13.924 54.2342 15.5292 57.9522 '
  + '16.3121L62.0204 17.2525C63.6257 17.5672 64.0545 18 64.0545 '
  + '18.6649C64.0545 19.7233 62.8427 20.3882 60.8834 '
  + '20.3882C58.4204 20.3882 57.0119 19.8413 56.465 '
  + '17.9607H52.1765C52.8021 21.4938 55.4224 23.8426 60.7457 '
  + '23.8426ZM50.9372 23.4138H46.3221C43.4263 23.4138 41.8211 '
  + '21.6118 41.8211 19.3377V10.3279H38.5752V6.48789H41.8368V1'
  + '.66822H46.1254V6.48789H50.9372V10.3279H46.1254V18.24C46.1254 '
  + '19.141 46.7509 19.5738 47.7306 19.5738H50.9372V23.4138ZM32.4454 '
  + '6.49576V8.02231C30.9354 6.74593 29.0205 6.04859 27.0434 '
  + '6.0551C25.8597 6.0302 24.6829 6.24184 23.5821 6.67761C22.4813 '
  + '7.11338 21.4785 7.76451 20.6326 8.59284C19.7866 9.42117 19.1146 '
  + '10.41 18.6557 11.5015C18.1969 12.5929 17.9606 13.7649 17.9606 '
  + '14.9489C17.9606 16.1328 18.1969 17.3049 18.6557 18.3963C19.1146 '
  + '19.4877 19.7866 20.4766 20.6326 21.3049C21.4785 22.1332 22.4813 '
  + '22.7844 23.5821 23.2201C24.6829 23.6559 25.8597 23.8675 27.0434 '
  + '23.8426C29.0209 23.8512 30.9365 23.1536 32.4454 21.8754V23.'
  + '4059H36.7221V6.48789L32.4454 6.49576ZM27.3975 20.1285C26.3716 '
  + '20.1402 25.3654 19.8467 24.5068 19.2852C23.6481 18.7237 22.9758 '
  + '17.9195 22.5753 16.975C22.1747 16.0305 22.0641 14.9882 22.2573 '
  + '13.9806C22.4505 12.9731 22.939 12.0457 23.6605 11.3163C24.3821 '
  + '10.587 25.3042 10.0887 26.3096 9.88467C27.3151 9.68065 28.3585 '
  + '9.78017 29.3072 10.1706C30.256 10.561 31.0673 11.2246 31.6379 '
  + '12.0772C32.2086 12.9298 32.5129 13.9328 32.5122 14.9587C32.5185 '
  + '15.635 32.3905 16.3058 32.1358 16.9324C31.8811 17.5589 31.5046 '
  + '18.1287 31.0282 18.6087C30.5518 19.0888 29.9849 19.4696 29.3603 '
  + '19.7291C28.7358 19.9887 28.0659 20.1217 '
  + '27.3896 20.1207L27.3975 20.1285Z';

  const debounce = (f) => {
    let timer = '';

    return (...args) => {
      clearTimeout(timer);
      timer = setTimeout(() => f(...args), 1000);
    };
  };

  const inputText = (e) => {
    const filteredData = originalData.filter(restaurant => (
      restaurant.title.toLowerCase().includes(e.toLowerCase())
      || restaurant.categories.join('').toLowerCase().includes(e.toLowerCase())
    ));

    setStoresMap(filteredData);
  };

  const deboncedInput = debounce(inputText);

  return (
    <nav className="nav">
      <div className="nav__items">
        <div className="nav__items-side">
          <div className="uberEats">
            <svg
              className="nav__uber"
              width="70"
              height="24"
              viewBox="0 0 70 24"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M67.713 9.66297C65.5609 9.66297 64.0343 11.3469
      64.0343 13.9318V23.4138H60.7491V6.72395H63.995V8.76198C64.3953
      8.0865 64.9691 7.53039 65.6567 7.15129C66.3444 6.77219 67.1209
      6.5839 67.9058 6.60592H69.0861V9.66297H67.713ZM58.4789
      15.0689C58.4789 10.0918 54.9379 6.36985 50.1458 6.36985C49.0135
      6.37754 47.894 6.60903 46.8515 7.05101C45.809 7.49299 44.8643
      8.13673 44.0715 8.9452C43.2788 9.75367 42.6537 10.7109 42.2323
      11.7618C41.8109 12.8128 41.6014 13.9367 41.616 15.0689C41.616
      20.042 45.452 23.8033 50.4566 23.8033C51.8546 23.8297 53.2384
      23.5197 54.4914 22.8993C55.7445 22.2789 56.83 21.3664 57.6566
      20.2387L55.2724 18.4918C54.7253 19.2553 54.0016 19.8749 53.1629
      20.2976C52.3243 20.7204 51.3957 20.9337 50.4566 20.9194C49.1191
      20.9131 47.8282 20.4278 46.8177 19.5516C45.8072 18.6753 45.144
      17.4661 44.9484 16.143H58.4868L58.4789 15.0689ZM45.0192
      13.5384C45.6055 10.9928 47.6396 9.26953 50.1064 9.26953C52.5733
      9.26953 54.6035 10.9928 55.1543 13.5384H45.0192ZM31.2094
      6.36985C30.1115 6.37078 29.0247 6.58926 28.0117 7.01268C26.9987
      7.4361 26.0797 8.05606 25.3078
      8.83674V0.491821H22.0225V23.4138H25.2684V21.2971C26.8409
      22.8878 28.9805 23.7892 31.2173 23.8033C32.3775 23.8279
      33.5311 23.6207 34.6102 23.1937C35.6894 22.7667 36.6724
      22.1286 37.5017 21.3168C38.331 20.5049 38.9898 19.5356
      39.4397 18.4658C39.8895 17.396 40.1212 16.2471 40.1212
      15.0866C40.1212 13.926 39.8895 12.7772 39.4397 11.7073C38.9898
      10.6375 38.331 9.66826 37.5017 8.8564C36.6724 8.04453 35.6894
      7.4064 34.6102 6.97942C33.5311 6.55244 32.3775 6.3452 31.2173
      6.36985H31.2094ZM30.9733 20.8682C29.8282 20.8737 28.7073 20.5388
      27.7528 19.9062C26.7983 19.2736 26.0532 18.3717 25.6121
      17.3149C25.171 16.2582 25.0538 15.0942 25.2753 13.9707C25.4968
      12.8472 26.047 11.8148 26.8562 11.0046C27.6654 10.1943 28.697
      9.64264 29.8202 9.41961C30.9434 9.19659 32.1075 9.31224 33.1648
      9.75189C34.2222 10.1915 35.1251 10.9354 35.7591 11.889C36.393
      12.8426 36.7294 13.9631 36.7255 15.1082C36.7265 15.8635 36.5784
      16.6116 36.2896 17.3095C36.0008 18.0074 35.577 18.6414 35.0425
      19.1751C34.5081 19.7088 33.8735 20.1318 33.1752 20.4196C32.4769
      20.7074 31.7286 20.8545 30.9733 20.8525V20.8682ZM9.92415
      20.7108C13.0953 20.7108 15.5583 18.2794 15.5583
      14.6361V0.491821H18.9615V23.4138H15.5976V21.2459C14.8117
      22.0582 13.8691 22.7026 12.827 23.1401C11.7849 23.5777
      10.6649 23.7992 9.53465 23.7915C4.64415 23.7915 0.878906
      20.2269 0.878906 14.821V0.491821H4.34514V14.6558C4.34514
      18.3187 6.70579 20.7108 9.92415 20.7108Z"
                fill="#262626"
              />
            </svg>

            <svg
              width="69"
              height="24"
              viewBox="0 0 69 24"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path d={wordEats} fill="#5FB709" />
            </svg>
          </div>
        </div>

        <div className="nav__items">
          <span className="nav__text">
            <svg
              className="nav__location"
              width="20"
              height="24"
              viewBox="0 0 20 24"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M9.99184 24C9.99184 24 0 15.5265 0 9.99184C0
            4.48163 4.45714 0 9.99184 0C15.5265 0 19.9837
            4.48163 19.9837 9.99184C19.9837 15.5265 9.99184
            24 9.99184 24ZM9.99184 2.00816C5.58367 2.00816
            1.98367 5.58367 1.98367 10.0163C1.98367 14.4245
            9.99184 21.0122 9.99184 21.0122C9.99184 21.0122
            18 14.4245 18 10.0163C18 5.58367 14.4 2.00816
            9.99184 2.00816ZM9.99184 14.0082C7.78776 14.0082
            6 12.2204 6 10.0163C6 7.81225 7.78776 6 9.99184
            6C12.1959 6 13.9837 7.78776 13.9837 9.99184C13.9837
            12.1959 12.1959 14.0082 9.99184 14.0082ZM9.99184
            8.00816C8.8898 8.00816 7.98367 8.91429 7.98367
            10.0163C7.98367 11.1184 8.8898 12 9.99184 12C11.0939
            12 12 11.0939 12 9.99184C12 8.8898 11.0939 8.00816
            9.99184 8.00816Z"
                fill="black"
              />
            </svg>
          London
          </span>
        </div>

        <div className="nav__items">
          <span className="nav__text">
            <svg
              className="nav__clock"
              width="22"
              height="22"
              viewBox="0 0 22 22"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M11 0C8.82441 0 6.69767 0.645139 4.88873
          1.85383C3.07979 3.06253 1.66989 4.78049 0.83733
          6.79048C0.00476614 8.80047 -0.21307 11.0122 0.211367
          13.146C0.635804 15.2798 1.68345 17.2398 3.22183
          18.7782C4.76021 20.3165 6.72022 21.3642 8.85401
          21.7886C10.9878 22.2131 13.1995 21.9952 15.2095
          21.1627C17.2195 20.3301 18.9375 18.9202 20.1462
          17.1113C21.3549 15.3023 22 13.1756 22 11C22 8.08262
          20.8411 5.28472 18.7782 3.22182C16.7153 1.15892
          13.9174 0 11 0V0ZM11 20.1667C9.18701 20.1667 7.41473
          19.629 5.90728 18.6218C4.39983 17.6146 3.22491 16.1829
          2.53111 14.5079C1.83731 12.8329 1.65577 10.9898 2.00947
          9.21167C2.36317 7.43351 3.23621 5.80017 4.51819
          4.51819C5.80017 3.23621 7.43352 2.36317 9.21167
          2.00947C10.9898 1.65577 12.8329 1.8373 14.5079
          2.5311C16.1829 3.22491 17.6146 4.39982 18.6218
          5.90727C19.629 7.41472 20.1667 9.187 20.1667
          11C20.164 13.4303 19.1974 15.7604 17.4789
          17.4789C15.7604 19.1974 13.4303 20.164 11 20.1667Z"
                fill="black"
              />
              <path
                d="M11.9173
          3.66663H10.084V10.0833V11V11.9166H15.584V10.0833H11.9173V3.66663Z"
                fill="black"
              />
            </svg>

          Deliver now
          </span>
        </div>
      </div>
      <div className="nav__items">
        <div className="nav__items-side">
          <div className="nav__search">
            <svg
              width="16"
              height="16"
              viewBox="0 0 16 16"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M10.9217 11.0417L15 15M12.8788 6.76471C12.8788
            9.94847 10.2196 12.5294 6.93939 12.5294C3.65916 12.5294
            1 9.94847 1 6.76471C1 3.58095 3.65916 1 6.93939 1C10.2196
            1 12.8788 3.58095 12.8788 6.76471Z"
                stroke="black"
                strokeWidth="2"
              />
            </svg>
            <input
              onChange={e => deboncedInput(e.target.value)}
              id="input"
              type="text"
              className="nav__text nav__input"
              placeholder="search"
            />
          </div>
          <p>
            Sign in
          </p>

        </div>
      </div>
    </nav>
  );
};

const getStoreData = state => ({
  originalData: state.originalData,
});

const setStoreData = {
  setStoresMap: storesMap.setStoresMap,
};

Header.propTypes = {
  originalData: PropTypes.arrayOf(PropTypes.any).isRequired,
  setStoresMap: PropTypes.func.isRequired,
};

export default connect(getStoreData, setStoreData)(Header);
